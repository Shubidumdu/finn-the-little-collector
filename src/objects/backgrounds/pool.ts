import { GameObject } from '..';
import canvas, { DrawFunc, drawLayer } from '../../canvas';
import { getLinearPosition } from '../../utils';

export default class Pool implements GameObject {
  constructor() {}

  #draw = drawLayer(canvas.get('bg'));

  init = () => {};

  update = (time: DOMHighResTimeStamp) => {
    this.#draw((
      context,
      canvas,
    ) => {
      // 바닥
      context.beginPath();
      context.setTransform(1, 0, 0, 1, 0, 0);
      context.fillStyle = '#f7f8f8'
      context.fillRect(0, 0, canvas.width, canvas.height);

      // 하늘
      context.beginPath();
      context.setTransform(1, 0, 0, 1, 0, 0);
      const grad1 = context.createLinearGradient(0, 0, 0, innerHeight / 3);
      grad1.addColorStop(0, '#c4f0f7');
      grad1.addColorStop(0.4, '#fff');
      grad1.addColorStop(0.5, '#fff');
      grad1.addColorStop(1, '#cff7fd');
      context.fillStyle = grad1;
      context.fillRect(0, 0, canvas.width, 200);
      context.closePath();

      const delta1 = Math.sin(time / 200) / 50;
      const per1 = canvas.width / 1500;
      context.setTransform(1 * per1, 0, 0, Math.min(0.6 * per1, 1.2) + delta1, 0, 120);
      const pool = new Path2D();
      pool.moveTo(1513, 0);
      pool.lineTo(1513, 185.5);
      pool.bezierCurveTo(1396, 271, 1125.5, 294.564, 1016, 265.5);
      pool.bezierCurveTo(906.5, 236.436, 731.5, 294, 677, 321);
      pool.bezierCurveTo(622.5, 348, 279, 381.54, 270.5, 323.02);
      pool.bezierCurveTo(262, 264.5, 53.3475, 255.524, 0, 242.086);
      pool.lineTo(0, 0);
      pool.lineTo(1513, 0);
      const grad2 = context.createLinearGradient(0, 0, 0, innerHeight / 3);
      grad2.addColorStop(0, '#cff7fd');
      grad2.addColorStop(.15, '#50effa');
      grad2.addColorStop(.3, '#50effa');
      grad2.addColorStop(.4, '#8ceffa');
      grad2.addColorStop(.5, '#8ceffa');
      grad2.addColorStop(.7, '#dbfdfb');
      grad2.addColorStop(1, '#dbfdfb');
      context.fillStyle = grad2;
      context.fill(pool);

      // 파라솔
      context.setTransform(1, 0, 0, 1, canvas.width / 2 - 760, 360);
      context.beginPath();
      this.#drawParasol(context);
      context.transform(1, 0, 0, 1, 0, 0);
      context.closePath();

      // 선베드
      context.setTransform(1, 0, 0, 1, canvas.width / 2 + 600, 360);
      context.beginPath();
      this.#drawSunbed(context);
      context.transform(1, 0, 0, 1, -40, 120);
      this.#drawSunbed(context);
      context.transform(1, 0, 0, 1, -40, 128);
      this.#drawSunbed(context);
      context.transform(1, 0, 0, 1, -40, 136);
      this.#drawSunbed(context);
      context.closePath();

      // person 이동 영역
      context.setTransform(1, 0, -0.5, 1, canvas.width / 2 - 280, 240);
      context.beginPath();
      context.fillStyle = '#fff';
      context.strokeRect(0, 0, 800, 600);
      context.closePath();

      context.beginPath();
      context.setTransform(
        .7,
        0,
        0,
        .8,
        getLinearPosition({
          x: canvas.width / 2,
          maxWidth: canvas.width,
          time: time / 120,
          offset: 200,
        }),
        60,
      );
      this.#drawCloud(context);
      context.setTransform(
        1,
        0,
        0,
        1,
        getLinearPosition({
          x: canvas.width / 2 + 300,
          maxWidth: canvas.width,
          time: time / 60,
          offset: 100,
        }),
        20,
      );
      context.scale(1.1, 1);
      this.#drawCloud(context);
      context.setTransform(
        1,
        0,
        0,
        1,
        getLinearPosition({
          x: canvas.width / 2 + 1300,
          maxWidth: canvas.width,
          time: time / 55,
          offset: 120,
        }),
        10,
      );
      context.scale(1.2, 1.1);
      this.#drawCloud(context);
      context.transform(1, 0, 0, 1, -20, 0);
      context.scale(0.4, 0.6);
      this.#drawCloud(context);
    });
  };

  remove = () => {
    this.#draw((context, canvas) => {
      context.clearRect(0, 0, canvas.width, canvas.height);
    });
  };

  #drawCloud: DrawFunc = (context) => {
    context.fillStyle = '#fff';
    context.fill(
      new Path2D('M25.6165 8.85822C22.2172 8.85822 18.8012 8.7563 15.4037 8.85822C7.85636 9.08464 1.42826 17.1362 0.592265 24.1493C0.0884702 28.3755 2.37828 31.5619 6.54505 32.6129C10.6042 33.6369 15.08 33.415 19.1982 33.022C24.847 32.4829 30.2347 31.336 35.2933 28.6914C37.8802 27.3391 42.308 25.4637 43.9968 22.8656C44.1577 22.618 44.3867 22.3687 44.4059 22.0616C44.4091 22.0105 44.4059 23.6631 44.4059 24.0928C44.4059 26.6478 47.2274 27.6237 49.3995 28.0002C52.5919 28.5536 55.8151 28.4394 57.6656 25.3765C58.0463 24.7465 58.2919 21.9245 58.3851 23.2747C58.6052 26.4673 61.8799 28.4521 64.7328 29.1005C68.0009 29.8433 71.582 28.6258 73.1824 25.5317C73.981 23.9877 73.4957 24.9723 74.2968 26.3075C76.8638 30.5858 82.1012 31.8906 86.5127 29.5378C88.9019 28.2636 91.0424 26.1879 92.4796 23.8954C92.8955 23.2319 93.2335 22.5029 93.4952 21.7653C93.5654 21.5675 93.4546 21.1588 93.6645 21.1588C93.7512 21.1588 93.6868 21.333 93.7209 21.4127C93.9554 21.9599 94.4488 22.2957 94.9481 22.5835C97.0986 23.8227 99.6538 24.2133 102.1 24.2903C106.061 24.4151 112.407 22.6558 111.579 17.3501C111.149 14.5889 107.37 14.1881 105.147 14.5007C104.613 14.5758 103.42 15.4907 104.442 15.9113C105.503 16.3484 104.795 10.3448 104.611 9.93029C101.889 3.7879 92.8501 3.67228 87.2321 3.83644C84.7659 3.90851 78.9878 4.03853 77.7246 7.02443C77.5917 7.33837 77.8468 6.91091 77.7387 6.5025C77.1136 4.1413 74.4763 2.98863 72.3783 2.29887C65.2923 -0.030799 54.4134 -0.610086 48.3415 4.52764C46.8686 5.77393 45.9501 7.2314 45.5344 9.11213C45.4643 9.42896 45.2472 10.206 45.5485 10.0855C45.8393 9.96915 45.6575 8.85972 45.619 8.66074C45.375 7.40018 44.089 6.75431 42.9953 6.34733C40.1956 5.30561 37.1088 5.32529 34.1648 5.30348C32.0996 5.28818 29.9111 5.12539 27.8594 5.44454C26.3433 5.68038 25.6924 7.31093 25.3767 8.73127C25.189 9.57584 26.1271 10.3817 26.8861 10.3817'),
    );
  };

  #drawParasol: DrawFunc = (context) => {
    context.fillStyle = '#eee9e2';
    context.fill(
      new Path2D('M99.0418 7.48619C104.406 14.3725 116.402 33.8208 121.479 56.5231C130.505 49.5065 148.481 38.8798 169.074 33.7342C180.709 30.8269 193.179 29.6693 205.342 31.9011C206.249 32.0674 207.153 32.2526 208.056 32.4572C197.932 24.8136 173.924 8.66395 158.875 5.21443C143.826 1.76491 130.394 0.902527 125.559 0.902527L99.0418 7.48619Z'),
    );
    context.fillStyle = '#e0d9cf';
    context.fill(
      new Path2D('M39.8887 42.2207C30.5964 50.8475 12.4652 69.6904 0 98.2953C2.2664 94.89 10.3801 88.2609 24.7038 88.9874C28.6322 77.9389 37.6223 54.2529 42.1551 47.8962C46.6283 41.6232 54.3504 31.6712 64.764 23.6258C56.046 29.5566 45.2124 37.2781 39.8887 42.2207Z'),
    );
    context.fill(
      new Path2D('M158.875 0.902527C146.727 -0.732037 131.602 0.221459 125.559 0.902527C130.394 0.902527 143.826 1.76491 158.875 5.21443C173.924 8.66395 197.932 24.8136 208.056 32.4572C208.432 31.8628 208.983 31.1962 209.708 30.5388C212.767 27.7646 218.912 25.1542 228 28.8248C223.467 23.1492 174.06 2.94573 158.875 0.902527Z'),
    );
    context.fillStyle = '#e8e2d8';
    context.fill(
      new Path2D('M42.1551 47.8962C37.6223 54.2529 28.6322 77.9389 24.7038 88.9874C28.1644 85.9573 34.0545 81.8726 42.1551 77.6126C56.7691 69.9271 78.5775 61.6706 106.294 58.0046C108.23 57.7486 110.194 57.5149 112.187 57.3055C113.237 57.1951 114.294 57.0915 115.36 56.9948C117.372 56.8122 119.412 56.6544 121.479 56.5231C116.402 33.8208 104.406 14.3725 99.0418 7.48619L96.7377 8.41347L73.6581 17.7022C71.3422 19.2058 68.2192 21.2751 64.764 23.6258C54.3504 31.6712 46.6283 41.6232 42.1551 47.8962Z'),
    );
    context.fillStyle = '#bbb8b5';
    context.fill(
      new Path2D('M42.1551 77.6126C39.4354 82.3169 37.5467 90.4846 36.9423 93.9803C47.8211 86.1176 78.1002 71.1142 112.187 74.0023L109.241 66.0035L106.294 58.0046C78.5775 61.6706 56.7691 69.9271 42.1551 77.6126Z'),
    );
    context.fill(
      new Path2D('M24.7038 88.9874C10.3801 88.2609 2.2664 94.89 0 98.2953C5.96819 93.9057 21.7121 86.8972 36.9423 93.9803C37.5467 90.4846 39.4354 82.3169 42.1551 77.6126C34.0545 81.8726 28.1644 85.9573 24.7038 88.9874Z'),
    );
    context.fillStyle = '#c6c1bb';
    context.fill(
      new Path2D('M121.479 56.5231C119.412 56.6544 117.372 56.8122 115.36 56.9948L119.086 68.4078C131.963 59.1695 155.783 47.2137 184.712 47.2137C181.161 43.8273 173.062 36.3904 169.074 33.7342C148.481 38.8798 130.505 49.5065 121.479 56.5231Z'),
    );
    context.fill(
      new Path2D('M106.294 58.0046L109.241 66.0035L112.187 74.0023C113.34 72.9121 114.765 71.6886 116.444 70.3809L112.187 57.3055C110.194 57.5149 108.23 57.7486 106.294 58.0046Z'),
    );
    context.fill(
      new Path2D('M169.074 33.7342C173.062 36.3904 181.161 43.8273 184.712 47.2137C187.331 42.8894 194.192 35.9386 205.342 31.9011C193.179 29.6693 180.709 30.8269 169.074 33.7342Z'),
    );
    context.fillStyle = '#27160C';
    context.fill(
      new Path2D('M158.648 200H162.048L119.086 68.4078L115.36 56.9948C114.294 57.0915 113.237 57.1951 112.187 57.3055L116.444 70.3809L158.648 200Z'),
    );
    context.fillStyle = '#27160C';
    context.fill(
      new Path2D('M96.7377 8.41347L99.0418 7.48619L98.1352 4.53336L95.6421 5.21443L96.7377 8.41347Z'),
    );
    const shadow = new Path2D();
    shadow.ellipse(120, 200, 100, 10, 0, 0, Math.PI * 2);
    context.globalAlpha = .1;
    context.fill(shadow);
    context.globalAlpha = 1;
  };

  #drawSunbed: DrawFunc = (context) => {
    context.fillStyle = '#fff';
    context.fill(
      new Path2D('M17.8437 17.3496L1 45.8843H83.9822C101.083 41.1542 135.78 30.9846 137.758 28.1465C139.736 25.3085 149.194 8.86632 153.675 1H151.048L105.153 17.3496H17.8437Z'),
    );
    context.fillStyle = '#aca39a';
    context.fill(
      new Path2D('M137.758 28.1465C135.78 30.9846 101.083 41.1542 83.9822 45.8843H92.6732C93.7669 45.5707 94.89 45.2469 96.0355 44.9146C104.041 42.592 113.138 39.8556 120.915 37.3112C122.026 36.9477 123.11 36.5881 124.16 36.2342C124.42 36.1467 124.677 36.0595 124.933 35.9727C130.777 33.9867 135.477 32.1967 137.758 30.9229C138.168 30.5882 138.972 29.8662 139.665 29.072C139.931 28.7682 140.18 28.4538 140.385 28.1465C140.451 28.0483 140.577 27.8375 140.754 27.5296C140.972 27.152 141.268 26.6284 141.626 25.9871C141.786 25.7012 141.958 25.3919 142.141 25.0617C142.429 24.5442 142.743 23.9754 143.08 23.365C143.191 23.1638 143.304 22.958 143.42 22.7481C143.503 22.596 143.588 22.4417 143.674 22.2853C146.694 16.7954 151.055 8.76874 153.675 3.93059V1C149.194 8.86632 139.736 25.3085 137.758 28.1465Z'),
    );
    context.fill(
      new Path2D('M83.9822 45.8843H1V49.1234L21.8615 48.9671L25.7247 48.9382L27.27 48.9266L83.3641 48.5064H132.504H136.831H139.665H162.638V45.8843H160.938H92.6732H83.9822Z'),
    );
    context.fill(
      new Path2D('M21.8615 48.9671V60.8458H25.7247V48.9382L21.8615 48.9671Z'),
    );
    context.fillStyle = '#827971';
    context.fill(
      new Path2D('M25.7247 48.9382V60.8458L27.27 58.2237V48.9266L25.7247 48.9382Z'),
    );
    context.fillStyle = '#aca39a';
    context.fill(
      new Path2D('M132.504 48.5064V61H136.831V48.5064H132.504Z'),
    );
    context.fillStyle = '#827971';
    context.fill(
      new Path2D('M136.831 48.5064V61L139.665 56.0643V48.5064H136.831Z'),
    );
    context.fillStyle = '#d9d1c9';
    context.fill(
      new Path2D('M92.6732 45.8843H160.938H162.638L173.535 27.5296L175 25.0617H173.918H148.314L149.861 25.9871H173.364L172.439 27.5296L162.02 44.9146H146.567H146.258H144.558H138.067H136.831H132.504H96.0355C94.89 45.2469 93.7669 45.5707 92.6732 45.8843Z'),
    );
    context.fillStyle = '#78736f';
    context.fill(
      new Path2D('M162.638 45.8843V48.5064L175 27.0668V25.0617L173.535 27.5296L162.638 45.8843Z'),
    );
    context.fillStyle = '#a7a098';
    context.fill(
      new Path2D('M172.439 27.5296L173.364 25.9871H149.861L152.439 27.5296H154.855L155.22 26.9126H156.611V27.2211L156.436 27.5296H172.439Z'),
    );
    context.fillStyle = '#d9d1c9';
    context.fill(
      new Path2D('M142.141 25.0617C141.958 25.3919 141.786 25.7012 141.626 25.9871H147.508L145.945 25.0617H142.141Z'),
    );
    context.fillStyle = '#a79f98';
    context.fill(
      new Path2D('M141.626 25.9871C141.268 26.6284 140.972 27.152 140.754 27.5296H150.112L147.508 25.9871H141.626Z'),
    );
    context.fill(
      new Path2D('M144.558 44.9146H146.258L156.256 27.5296L156.611 26.9126H155.22L154.855 27.5296L144.558 44.9146Z'),
    );
    context.fillStyle = '#827971';
    context.fill(
      new Path2D('M156.256 27.5296L146.258 44.9146H146.567L156.436 27.5296H156.256Z'),
    );
    context.fillStyle = '#8f867d';
    context.fill(
      new Path2D('M120.915 37.3112L132.504 44.9146H136.831L124.16 36.2342C123.11 36.5881 122.026 36.9477 120.915 37.3112Z'),
    );
    context.fill(
      new Path2D('M124.16 36.2342L136.831 44.9146H138.067L124.933 35.9727C124.677 36.0595 124.42 36.1467 124.16 36.2342Z'),
    );
    context.fill(
      new Path2D('M150.893 27.9923H152.13L143.42 22.7481C143.304 22.958 143.191 23.1638 143.08 23.365L145.945 25.0617L147.508 25.9871L150.112 27.5296L150.893 27.9923Z'),
    );
    context.fill(
      new Path2D('M143.42 22.7481L152.13 27.9923L152.439 27.5296L149.861 25.9871L148.314 25.0617L143.674 22.2853C143.588 22.4417 143.503 22.596 143.42 22.7481Z'),
    );
  };
}
